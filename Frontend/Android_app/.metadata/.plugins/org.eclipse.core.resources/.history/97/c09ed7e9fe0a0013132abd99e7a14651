
public final class cal_prime {
	
	//fastest no of primes that can be calculated is 46877
	
	
	
	boolean isPrime(i):
		if( (i%2==0 and (i is not 2)) or i==1):
			return False

		for x in range(3,i/2+1,2):
			if(i%x==0):
				return False
		return True


	def get_prime_range(start,end=-1):
		
		if(end==-1):
			end=start+(31250)
		print end
		all_primes=[]
		for x in range(start,end):
			if(isPrime(x)):
				all_primes.append(x)
		return all_primes,end


	def get_prime_time(start_range,cal_time=5):	
		all_primes=[]
		import time
		i=start_range
		flag=True
		
		start=time.time()
		final=0
		while(final<cal_time):
			if(isPrime(i)):
				all_primes.append(i)
			i+=1
			final=time.time()-start	
		return all_primes,i
	

}
